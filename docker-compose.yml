version: "3.8"

services:
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2182:2181"

  kafka:
    image: wurstmeister/kafka
    ports:
      - "9093:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2182
    depends_on:
      - zookeeper

  mongodb:
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db

  namenode:
    image: bde2020/hadoop-namenode:2.0.0-hadoop3.2.1-java8
    ports:
      - "9870:9870"
    environment:
      - CLUSTER_NAME=hespress-cluster
    env_file:
      - ./hadoop.env
    volumes:
      - hadoop_namenode:/hadoop/dfs/name

  datanode:
    image: bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
    depends_on:
      - namenode
    env_file:
      - ./hadoop.env
    volumes:
      - hadoop_datanode:/hadoop/dfs/data

  spark-master:
    image: bde2020/spark-master:3.1.2-hadoop3.2
    ports:
      - "8081:8080"
      - "7077:7077"

  spark-worker:
    image: bde2020/spark-worker:3.1.2-hadoop3.2
    depends_on:
      - spark-master
    environment:
      - SPARK_MASTER=spark://spark-master:7077

  main-app:
    build: .
    environment:
      - SERVICE=main
    volumes:
      - .:/app
    depends_on:
      - kafka
      - mongodb
      - spark-master
    networks:
      - hespress_network

  dashboard:
    build: .
    environment:
      - SERVICE=dashboard
    ports:
      - "5000:5000"
    volumes:
      - .:/app
    depends_on:
      - mongodb
    networks:
      - hespress_network

volumes:
  mongodb_data:
  hadoop_namenode:
  hadoop_datanode:

networks:
  hespress_network:
    driver: bridge
